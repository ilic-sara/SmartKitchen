@page "/admin/cuisines"
@inject NavigationManager NavigationManager
@inject CuisineApiService CuisineApiService
@rendermode InteractiveWebAssembly
@attribute [Authorize(Roles = "Admin")]

@if (loading)
{
    <div class="d-flex justify-content-center align-items-center" style="height: 100vh;">
        <div class="spinner-border text-primary" role="status">
            <span class="sr-only">Loading...</span>
        </div>
    </div>
}
else
{
    <div class="container-fluid my-5">
        <div class="row justify-content-center">
            <div class="col-11 col-md-10 col-xxl-9">
                <div class="row">
                    <div class="col-10">
                        <h3>Cuisines</h3>
                    </div>
                    <div class="col-2 d-flex justify-content-end">
                        <button type="button" @onclick="AddCuisine" class="btn green-btn px-2 w-auto">Add</button>
                    </div>
                </div>
                <table class="table table-hover table-bordered my-4 text-center">
                    <thead>
                        <tr>
                            <th>Image</th>
                            <th>Name</th>
                            <th></th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var cuisine in cuisines)
                        {
                            <tr class="align-middle">
                                <td><img src="@cuisine.PictureUrl" class="img-small" /> </td>
                                <td>@cuisine.Name</td>
                                <td class="text-end">
                                    <button type="button" @onclick="() => EditCuisine(cuisine.Id)" class="btn gray-btn m-1 px-2 w-auto">Edit</button>
                                    <button type="button" @onclick="() => DeleteCuisine(cuisine.Id)" class="btn btn-danger  m-1 px-2 w-auto">Delete</button>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
}

@code {
    private List<Cuisine> cuisines = [];
    private bool loading = true;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            cuisines = await CuisineApiService.GetCuisinesAsync();
            loading = false;
            StateHasChanged();
        }
    }


    private void AddCuisine()
    {
        NavigationManager.NavigateTo($"/admin/add-cuisine");
    }

    private void EditCuisine(string id)
    {
        NavigationManager.NavigateTo($"/admin/edit-cuisine/{id}");
    }

    private async Task DeleteCuisine(string id)
    {
        await CuisineApiService.DeleteCuisineAsync(id);
        cuisines = await CuisineApiService.GetCuisinesAsync();
    }
}
